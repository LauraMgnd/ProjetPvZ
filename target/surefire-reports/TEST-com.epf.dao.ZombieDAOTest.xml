<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.epf.dao.ZombieDAOTest" time="0.072" tests="8" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\Laura Mgnd\ProjetPvZ\target\test-classes;C:\Users\Laura Mgnd\ProjetPvZ\target\classes;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-webmvc\6.1.13\spring-webmvc-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-aop\6.1.13\spring-aop-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-beans\6.1.13\spring-beans-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-context\6.1.13\spring-context-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\io\micrometer\micrometer-observation\1.12.10\micrometer-observation-1.12.10.jar;C:\Users\Laura Mgnd\.m2\repository\io\micrometer\micrometer-commons\1.12.10\micrometer-commons-1.12.10.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-expression\6.1.13\spring-expression-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-web\6.1.13\spring-web-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-jdbc\6.1.13\spring-jdbc-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-tx\6.1.13\spring-tx-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-core\6.1.13\spring-core-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-jcl\6.1.13\spring-jcl-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-test\6.1.13\spring-test-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Laura Mgnd\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Laura Mgnd\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.2\jackson-databind-2.18.2.jar;C:\Users\Laura Mgnd\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.2\jackson-annotations-2.18.2.jar;C:\Users\Laura Mgnd\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.2\jackson-core-2.18.2.jar;C:\Users\Laura Mgnd\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.1.0\jakarta.servlet-api-6.1.0.jar;C:\Users\Laura Mgnd\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.2\junit-jupiter-5.10.2.jar;C:\Users\Laura Mgnd\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\Laura Mgnd\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Laura Mgnd\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\Laura Mgnd\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Laura Mgnd\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.2\junit-jupiter-params-5.10.2.jar;C:\Users\Laura Mgnd\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.2\junit-jupiter-engine-5.10.2.jar;C:\Users\Laura Mgnd\.m2\repository\org\junit\platform\junit-platform-engine\1.10.2\junit-platform-engine-1.10.2.jar;C:\Users\Laura Mgnd\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\Laura Mgnd\.m2\repository\org\mockito\mockito-core\5.11.0\mockito-core-5.11.0.jar;C:\Users\Laura Mgnd\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\Laura Mgnd\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.12\byte-buddy-agent-1.14.12.jar;C:\Users\Laura Mgnd\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Laura Mgnd\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Laura Mgnd\.m2\repository\ch\qos\logback\logback-classic\1.5.16\logback-classic-1.5.16.jar;C:\Users\Laura Mgnd\.m2\repository\ch\qos\logback\logback-core\1.5.16\logback-core-1.5.16.jar;C:\Users\Laura Mgnd\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;"/>
    <property name="java.vm.vendor" value="Amazon.com Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
    <property name="user.timezone" value="Europe/Berlin"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="FR"/>
    <property name="sun.boot.library.path" value="C:\Users\Laura Mgnd\.jdks\corretto-21.0.6\bin"/>
    <property name="sun.java.command" value="C:\Users\Laura Mgnd\AppData\Local\Temp\surefire15562733999862438908\surefirebooter-20250427225715223_3.jar C:\Users\Laura Mgnd\AppData\Local\Temp\surefire15562733999862438908 2025-04-27T22-57-15_125-jvmRun1 surefire-20250427225715223_1tmp surefire_0-20250427225715223_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\Laura Mgnd\ProjetPvZ\target\test-classes;C:\Users\Laura Mgnd\ProjetPvZ\target\classes;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-webmvc\6.1.13\spring-webmvc-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-aop\6.1.13\spring-aop-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-beans\6.1.13\spring-beans-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-context\6.1.13\spring-context-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\io\micrometer\micrometer-observation\1.12.10\micrometer-observation-1.12.10.jar;C:\Users\Laura Mgnd\.m2\repository\io\micrometer\micrometer-commons\1.12.10\micrometer-commons-1.12.10.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-expression\6.1.13\spring-expression-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-web\6.1.13\spring-web-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-jdbc\6.1.13\spring-jdbc-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-tx\6.1.13\spring-tx-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-core\6.1.13\spring-core-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-jcl\6.1.13\spring-jcl-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\org\springframework\spring-test\6.1.13\spring-test-6.1.13.jar;C:\Users\Laura Mgnd\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Laura Mgnd\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Laura Mgnd\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.2\jackson-databind-2.18.2.jar;C:\Users\Laura Mgnd\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.2\jackson-annotations-2.18.2.jar;C:\Users\Laura Mgnd\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.2\jackson-core-2.18.2.jar;C:\Users\Laura Mgnd\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.1.0\jakarta.servlet-api-6.1.0.jar;C:\Users\Laura Mgnd\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.2\junit-jupiter-5.10.2.jar;C:\Users\Laura Mgnd\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\Laura Mgnd\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Laura Mgnd\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\Laura Mgnd\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Laura Mgnd\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.2\junit-jupiter-params-5.10.2.jar;C:\Users\Laura Mgnd\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.2\junit-jupiter-engine-5.10.2.jar;C:\Users\Laura Mgnd\.m2\repository\org\junit\platform\junit-platform-engine\1.10.2\junit-platform-engine-1.10.2.jar;C:\Users\Laura Mgnd\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\Laura Mgnd\.m2\repository\org\mockito\mockito-core\5.11.0\mockito-core-5.11.0.jar;C:\Users\Laura Mgnd\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\Laura Mgnd\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.12\byte-buddy-agent-1.14.12.jar;C:\Users\Laura Mgnd\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Laura Mgnd\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Laura Mgnd\.m2\repository\ch\qos\logback\logback-classic\1.5.16\logback-classic-1.5.16.jar;C:\Users\Laura Mgnd\.m2\repository\ch\qos\logback\logback-core\1.5.16\logback-core-1.5.16.jar;C:\Users\Laura Mgnd\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Laura Mgnd"/>
    <property name="user.language" value="fr"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-01-21"/>
    <property name="java.home" value="C:\Users\Laura Mgnd\.jdks\corretto-21.0.6"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\Laura Mgnd\ProjetPvZ"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\Laura Mgnd\AppData\Local\Temp\surefire15562733999862438908\surefirebooter-20250427225715223_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="21.0.6+7-LTS"/>
    <property name="user.name" value="Laura Mgnd"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Corretto-21.0.6.7.1"/>
    <property name="localRepository" value="C:\Users\Laura Mgnd\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-21/issues/"/>
    <property name="java.io.tmpdir" value="C:\Users\LAURAM~1\AppData\Local\Temp\"/>
    <property name="idea.version" value="2024.3.4.1"/>
    <property name="java.version" value="21.0.6"/>
    <property name="user.dir" value="C:\Users\Laura Mgnd\ProjetPvZ"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Users\Laura Mgnd\.jdks\corretto-21.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python312\Scripts\;C:\Python312\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files\Apache\maven\bin;C:\Program Files\php;C:\ProgramData\ComposerSetup\bin;C:\tomcat\bin;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\Java\jdk-23\bin;C:\Program Files\Git\git-bash.exe;C:\Program Files\Git\bin;C:\MinGW\bin\;C:\Users\Laura Mgnd\scoop\shims;C:\Users\Laura Mgnd\AppData\Local\Microsoft\WindowsApps;C:\Users\Laura Mgnd\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Laura Mgnd\AppData\Roaming\npm;C:\Users\Laura Mgnd\AppData\Roaming\Composer\vendor\bin;;C:\Program Files\JetBrains\CLion 2024.3.5\bin;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Amazon.com Inc."/>
    <property name="java.vm.version" value="21.0.6+7-LTS"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
  </properties>
  <testcase name="testCreateFailsIfMapNotExists" classname="com.epf.dao.ZombieDAOTest" time="0.013">
    <system-out><![CDATA[22:57:16.850 [main] DEBUG org.springframework.jdbc.datasource.SingleConnectionDataSource -- Creating new JDBC DriverManager Connection to [jdbc:h2:mem:testdb_testCreateFailsIfMapNotExists();DB_CLOSE_DELAY=-1]
22:57:16.851 [main] DEBUG org.springframework.jdbc.datasource.SingleConnectionDataSource -- Established shared JDBC Connection: conn10: url=jdbc:h2:mem:testdb_testCreateFailsIfMapNotExists() user=SA
22:57:16.852 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [init.sql]
22:57:16.853 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT NOT NULL, colonne INT NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )
22:57:16.854 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Plante ( id_plante INT AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(255) NOT NULL, point_de_vie INT NOT NULL, attaque_par_seconde DECIMAL(5, 2) DEFAULT 0.00, degat_attaque INT NOT NULL, cout INT NOT NULL, soleil_par_seconde DECIMAL(5, 2) DEFAULT 0.00, effet ENUM('normal', 'slow low', 'slow medium', 'slow stop') DEFAULT 'normal', chemin_image VARCHAR(255) DEFAULT NULL )
22:57:16.855 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Zombie ( id_zombie INT AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(255) NOT NULL, point_de_vie INT NOT NULL, attaque_par_seconde DECIMAL(5, 2) DEFAULT 0.00, degat_attaque INT NOT NULL, vitesse_de_deplacement DECIMAL(5, 2) DEFAULT 0.00, chemin_image VARCHAR(255) DEFAULT NULL, id_map INT, CONSTRAINT fk_zombie_map FOREIGN KEY (id_map) REFERENCES Map(id_map) )
22:57:16.855 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executed SQL script from class path resource [init.sql] in 3 ms.
22:57:16.855 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [values.sql]
22:57:16.856 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 3 returned as update count for SQL: INSERT INTO Map (ligne, colonne, chemin_image) VALUES (5, 9, 'images/map/gazon.png'), (6, 9, 'images/map/gazon.png'), (4, 8, 'images/map/gazon.png')
22:57:16.856 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 5 returned as update count for SQL: INSERT INTO Plante (nom, point_de_vie, attaque_par_seconde, degat_attaque, cout, soleil_par_seconde, effet, chemin_image) VALUES ('Tournesol', 100, 0.00, 0, 50, 25.00, 'normal', 'images/plante/tournesol.png'), ('Pois Tireur', 150, 1.50, 20, 100, 0.00, 'normal', 'images/plante/poistireur.png'), ('Double Pisto P', 150, 1.50, 40, 200, 0.00, 'normal', 'images/plante/doublepois.png'), ('Glace Pois', 120, 1.00, 10, 175, 0.00, 'slow low', 'images/plante/glacepois.png'), ('Noix', 300, 0.00, 0, 50, 0.00, 'normal', 'images/plante/noix.png')
22:57:16.857 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 5 returned as update count for SQL: INSERT INTO Zombie (nom, point_de_vie, attaque_par_seconde, degat_attaque, vitesse_de_deplacement, chemin_image, id_map) VALUES ('Zombie de base', 100, 0.80, 10, 0.50, 'images/zombie/zombie.png', 1), ('Zombie Cone', 200, 0.80, 10, 0.45, 'images/zombie/conehead.png', 1), ('Zombie Seau', 300, 0.70, 10, 0.40, 'images/zombie/buckethead.png', 1), ('Runner Zombie', 80, 1.00, 8, 0.70, 'images/zombie/runner.png', 2), ('Football Zombie', 250, 0.90, 12, 0.60, 'images/zombie/football.png', 3)
22:57:16.857 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executed SQL script from class path resource [values.sql] in 2 ms.
22:57:16.858 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL query
22:57:16.858 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL statement [SELECT * FROM map WHERE id_map = ?]
22:57:16.858 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
]]></system-out>
  </testcase>
  <testcase name="testReadByMapId" classname="com.epf.dao.ZombieDAOTest" time="0.01">
    <system-out><![CDATA[22:57:16.861 [main] DEBUG org.springframework.jdbc.datasource.SingleConnectionDataSource -- Creating new JDBC DriverManager Connection to [jdbc:h2:mem:testdb_testReadByMapId();DB_CLOSE_DELAY=-1]
22:57:16.862 [main] DEBUG org.springframework.jdbc.datasource.SingleConnectionDataSource -- Established shared JDBC Connection: conn11: url=jdbc:h2:mem:testdb_testReadByMapId() user=SA
22:57:16.862 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [init.sql]
22:57:16.864 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT NOT NULL, colonne INT NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )
22:57:16.865 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Plante ( id_plante INT AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(255) NOT NULL, point_de_vie INT NOT NULL, attaque_par_seconde DECIMAL(5, 2) DEFAULT 0.00, degat_attaque INT NOT NULL, cout INT NOT NULL, soleil_par_seconde DECIMAL(5, 2) DEFAULT 0.00, effet ENUM('normal', 'slow low', 'slow medium', 'slow stop') DEFAULT 'normal', chemin_image VARCHAR(255) DEFAULT NULL )
22:57:16.866 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Zombie ( id_zombie INT AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(255) NOT NULL, point_de_vie INT NOT NULL, attaque_par_seconde DECIMAL(5, 2) DEFAULT 0.00, degat_attaque INT NOT NULL, vitesse_de_deplacement DECIMAL(5, 2) DEFAULT 0.00, chemin_image VARCHAR(255) DEFAULT NULL, id_map INT, CONSTRAINT fk_zombie_map FOREIGN KEY (id_map) REFERENCES Map(id_map) )
22:57:16.866 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executed SQL script from class path resource [init.sql] in 4 ms.
22:57:16.866 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [values.sql]
22:57:16.867 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 3 returned as update count for SQL: INSERT INTO Map (ligne, colonne, chemin_image) VALUES (5, 9, 'images/map/gazon.png'), (6, 9, 'images/map/gazon.png'), (4, 8, 'images/map/gazon.png')
22:57:16.868 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 5 returned as update count for SQL: INSERT INTO Plante (nom, point_de_vie, attaque_par_seconde, degat_attaque, cout, soleil_par_seconde, effet, chemin_image) VALUES ('Tournesol', 100, 0.00, 0, 50, 25.00, 'normal', 'images/plante/tournesol.png'), ('Pois Tireur', 150, 1.50, 20, 100, 0.00, 'normal', 'images/plante/poistireur.png'), ('Double Pisto P', 150, 1.50, 40, 200, 0.00, 'normal', 'images/plante/doublepois.png'), ('Glace Pois', 120, 1.00, 10, 175, 0.00, 'slow low', 'images/plante/glacepois.png'), ('Noix', 300, 0.00, 0, 50, 0.00, 'normal', 'images/plante/noix.png')
22:57:16.868 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 5 returned as update count for SQL: INSERT INTO Zombie (nom, point_de_vie, attaque_par_seconde, degat_attaque, vitesse_de_deplacement, chemin_image, id_map) VALUES ('Zombie de base', 100, 0.80, 10, 0.50, 'images/zombie/zombie.png', 1), ('Zombie Cone', 200, 0.80, 10, 0.45, 'images/zombie/conehead.png', 1), ('Zombie Seau', 300, 0.70, 10, 0.40, 'images/zombie/buckethead.png', 1), ('Runner Zombie', 80, 1.00, 8, 0.70, 'images/zombie/runner.png', 2), ('Football Zombie', 250, 0.90, 12, 0.60, 'images/zombie/football.png', 3)
22:57:16.868 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executed SQL script from class path resource [values.sql] in 2 ms.
22:57:16.868 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL query
22:57:16.868 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL statement [SELECT * FROM zombie WHERE id_map = ?]
22:57:16.868 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
]]></system-out>
  </testcase>
  <testcase name="testReadById" classname="com.epf.dao.ZombieDAOTest" time="0.008">
    <system-out><![CDATA[22:57:16.871 [main] DEBUG org.springframework.jdbc.datasource.SingleConnectionDataSource -- Creating new JDBC DriverManager Connection to [jdbc:h2:mem:testdb_testReadById();DB_CLOSE_DELAY=-1]
22:57:16.872 [main] DEBUG org.springframework.jdbc.datasource.SingleConnectionDataSource -- Established shared JDBC Connection: conn12: url=jdbc:h2:mem:testdb_testReadById() user=SA
22:57:16.872 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [init.sql]
22:57:16.873 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT NOT NULL, colonne INT NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )
22:57:16.873 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Plante ( id_plante INT AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(255) NOT NULL, point_de_vie INT NOT NULL, attaque_par_seconde DECIMAL(5, 2) DEFAULT 0.00, degat_attaque INT NOT NULL, cout INT NOT NULL, soleil_par_seconde DECIMAL(5, 2) DEFAULT 0.00, effet ENUM('normal', 'slow low', 'slow medium', 'slow stop') DEFAULT 'normal', chemin_image VARCHAR(255) DEFAULT NULL )
22:57:16.874 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Zombie ( id_zombie INT AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(255) NOT NULL, point_de_vie INT NOT NULL, attaque_par_seconde DECIMAL(5, 2) DEFAULT 0.00, degat_attaque INT NOT NULL, vitesse_de_deplacement DECIMAL(5, 2) DEFAULT 0.00, chemin_image VARCHAR(255) DEFAULT NULL, id_map INT, CONSTRAINT fk_zombie_map FOREIGN KEY (id_map) REFERENCES Map(id_map) )
22:57:16.874 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executed SQL script from class path resource [init.sql] in 2 ms.
22:57:16.875 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [values.sql]
22:57:16.875 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 3 returned as update count for SQL: INSERT INTO Map (ligne, colonne, chemin_image) VALUES (5, 9, 'images/map/gazon.png'), (6, 9, 'images/map/gazon.png'), (4, 8, 'images/map/gazon.png')
22:57:16.876 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 5 returned as update count for SQL: INSERT INTO Plante (nom, point_de_vie, attaque_par_seconde, degat_attaque, cout, soleil_par_seconde, effet, chemin_image) VALUES ('Tournesol', 100, 0.00, 0, 50, 25.00, 'normal', 'images/plante/tournesol.png'), ('Pois Tireur', 150, 1.50, 20, 100, 0.00, 'normal', 'images/plante/poistireur.png'), ('Double Pisto P', 150, 1.50, 40, 200, 0.00, 'normal', 'images/plante/doublepois.png'), ('Glace Pois', 120, 1.00, 10, 175, 0.00, 'slow low', 'images/plante/glacepois.png'), ('Noix', 300, 0.00, 0, 50, 0.00, 'normal', 'images/plante/noix.png')
22:57:16.877 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 5 returned as update count for SQL: INSERT INTO Zombie (nom, point_de_vie, attaque_par_seconde, degat_attaque, vitesse_de_deplacement, chemin_image, id_map) VALUES ('Zombie de base', 100, 0.80, 10, 0.50, 'images/zombie/zombie.png', 1), ('Zombie Cone', 200, 0.80, 10, 0.45, 'images/zombie/conehead.png', 1), ('Zombie Seau', 300, 0.70, 10, 0.40, 'images/zombie/buckethead.png', 1), ('Runner Zombie', 80, 1.00, 8, 0.70, 'images/zombie/runner.png', 2), ('Football Zombie', 250, 0.90, 12, 0.60, 'images/zombie/football.png', 3)
22:57:16.877 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executed SQL script from class path resource [values.sql] in 2 ms.
22:57:16.877 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL query
22:57:16.877 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL statement [SELECT * FROM zombie WHERE id_zombie = ?]
22:57:16.877 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
]]></system-out>
  </testcase>
  <testcase name="testReadAll" classname="com.epf.dao.ZombieDAOTest" time="0.008">
    <system-out><![CDATA[22:57:16.879 [main] DEBUG org.springframework.jdbc.datasource.SingleConnectionDataSource -- Creating new JDBC DriverManager Connection to [jdbc:h2:mem:testdb_testReadAll();DB_CLOSE_DELAY=-1]
22:57:16.879 [main] DEBUG org.springframework.jdbc.datasource.SingleConnectionDataSource -- Established shared JDBC Connection: conn13: url=jdbc:h2:mem:testdb_testReadAll() user=SA
22:57:16.879 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [init.sql]
22:57:16.880 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT NOT NULL, colonne INT NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )
22:57:16.881 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Plante ( id_plante INT AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(255) NOT NULL, point_de_vie INT NOT NULL, attaque_par_seconde DECIMAL(5, 2) DEFAULT 0.00, degat_attaque INT NOT NULL, cout INT NOT NULL, soleil_par_seconde DECIMAL(5, 2) DEFAULT 0.00, effet ENUM('normal', 'slow low', 'slow medium', 'slow stop') DEFAULT 'normal', chemin_image VARCHAR(255) DEFAULT NULL )
22:57:16.883 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Zombie ( id_zombie INT AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(255) NOT NULL, point_de_vie INT NOT NULL, attaque_par_seconde DECIMAL(5, 2) DEFAULT 0.00, degat_attaque INT NOT NULL, vitesse_de_deplacement DECIMAL(5, 2) DEFAULT 0.00, chemin_image VARCHAR(255) DEFAULT NULL, id_map INT, CONSTRAINT fk_zombie_map FOREIGN KEY (id_map) REFERENCES Map(id_map) )
22:57:16.883 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executed SQL script from class path resource [init.sql] in 4 ms.
22:57:16.883 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [values.sql]
22:57:16.884 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 3 returned as update count for SQL: INSERT INTO Map (ligne, colonne, chemin_image) VALUES (5, 9, 'images/map/gazon.png'), (6, 9, 'images/map/gazon.png'), (4, 8, 'images/map/gazon.png')
22:57:16.884 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 5 returned as update count for SQL: INSERT INTO Plante (nom, point_de_vie, attaque_par_seconde, degat_attaque, cout, soleil_par_seconde, effet, chemin_image) VALUES ('Tournesol', 100, 0.00, 0, 50, 25.00, 'normal', 'images/plante/tournesol.png'), ('Pois Tireur', 150, 1.50, 20, 100, 0.00, 'normal', 'images/plante/poistireur.png'), ('Double Pisto P', 150, 1.50, 40, 200, 0.00, 'normal', 'images/plante/doublepois.png'), ('Glace Pois', 120, 1.00, 10, 175, 0.00, 'slow low', 'images/plante/glacepois.png'), ('Noix', 300, 0.00, 0, 50, 0.00, 'normal', 'images/plante/noix.png')
22:57:16.884 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 5 returned as update count for SQL: INSERT INTO Zombie (nom, point_de_vie, attaque_par_seconde, degat_attaque, vitesse_de_deplacement, chemin_image, id_map) VALUES ('Zombie de base', 100, 0.80, 10, 0.50, 'images/zombie/zombie.png', 1), ('Zombie Cone', 200, 0.80, 10, 0.45, 'images/zombie/conehead.png', 1), ('Zombie Seau', 300, 0.70, 10, 0.40, 'images/zombie/buckethead.png', 1), ('Runner Zombie', 80, 1.00, 8, 0.70, 'images/zombie/runner.png', 2), ('Football Zombie', 250, 0.90, 12, 0.60, 'images/zombie/football.png', 3)
22:57:16.884 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executed SQL script from class path resource [values.sql] in 1 ms.
22:57:16.885 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing SQL query [SELECT * FROM zombie]
22:57:16.885 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
]]></system-out>
  </testcase>
  <testcase name="testDeleteById" classname="com.epf.dao.ZombieDAOTest" time="0.007">
    <system-out><![CDATA[22:57:16.887 [main] DEBUG org.springframework.jdbc.datasource.SingleConnectionDataSource -- Creating new JDBC DriverManager Connection to [jdbc:h2:mem:testdb_testDeleteById();DB_CLOSE_DELAY=-1]
22:57:16.888 [main] DEBUG org.springframework.jdbc.datasource.SingleConnectionDataSource -- Established shared JDBC Connection: conn14: url=jdbc:h2:mem:testdb_testDeleteById() user=SA
22:57:16.888 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [init.sql]
22:57:16.889 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT NOT NULL, colonne INT NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )
22:57:16.889 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Plante ( id_plante INT AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(255) NOT NULL, point_de_vie INT NOT NULL, attaque_par_seconde DECIMAL(5, 2) DEFAULT 0.00, degat_attaque INT NOT NULL, cout INT NOT NULL, soleil_par_seconde DECIMAL(5, 2) DEFAULT 0.00, effet ENUM('normal', 'slow low', 'slow medium', 'slow stop') DEFAULT 'normal', chemin_image VARCHAR(255) DEFAULT NULL )
22:57:16.890 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Zombie ( id_zombie INT AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(255) NOT NULL, point_de_vie INT NOT NULL, attaque_par_seconde DECIMAL(5, 2) DEFAULT 0.00, degat_attaque INT NOT NULL, vitesse_de_deplacement DECIMAL(5, 2) DEFAULT 0.00, chemin_image VARCHAR(255) DEFAULT NULL, id_map INT, CONSTRAINT fk_zombie_map FOREIGN KEY (id_map) REFERENCES Map(id_map) )
22:57:16.890 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executed SQL script from class path resource [init.sql] in 2 ms.
22:57:16.890 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [values.sql]
22:57:16.891 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 3 returned as update count for SQL: INSERT INTO Map (ligne, colonne, chemin_image) VALUES (5, 9, 'images/map/gazon.png'), (6, 9, 'images/map/gazon.png'), (4, 8, 'images/map/gazon.png')
22:57:16.892 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 5 returned as update count for SQL: INSERT INTO Plante (nom, point_de_vie, attaque_par_seconde, degat_attaque, cout, soleil_par_seconde, effet, chemin_image) VALUES ('Tournesol', 100, 0.00, 0, 50, 25.00, 'normal', 'images/plante/tournesol.png'), ('Pois Tireur', 150, 1.50, 20, 100, 0.00, 'normal', 'images/plante/poistireur.png'), ('Double Pisto P', 150, 1.50, 40, 200, 0.00, 'normal', 'images/plante/doublepois.png'), ('Glace Pois', 120, 1.00, 10, 175, 0.00, 'slow low', 'images/plante/glacepois.png'), ('Noix', 300, 0.00, 0, 50, 0.00, 'normal', 'images/plante/noix.png')
22:57:16.892 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 5 returned as update count for SQL: INSERT INTO Zombie (nom, point_de_vie, attaque_par_seconde, degat_attaque, vitesse_de_deplacement, chemin_image, id_map) VALUES ('Zombie de base', 100, 0.80, 10, 0.50, 'images/zombie/zombie.png', 1), ('Zombie Cone', 200, 0.80, 10, 0.45, 'images/zombie/conehead.png', 1), ('Zombie Seau', 300, 0.70, 10, 0.40, 'images/zombie/buckethead.png', 1), ('Runner Zombie', 80, 1.00, 8, 0.70, 'images/zombie/runner.png', 2), ('Football Zombie', 250, 0.90, 12, 0.60, 'images/zombie/football.png', 3)
22:57:16.892 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executed SQL script from class path resource [values.sql] in 2 ms.
22:57:16.892 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL update
22:57:16.892 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL statement [DELETE FROM zombie WHERE id_zombie = ?]
22:57:16.892 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
22:57:16.893 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL query
22:57:16.893 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL statement [SELECT * FROM zombie WHERE id_zombie = ?]
22:57:16.893 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
]]></system-out>
  </testcase>
  <testcase name="testCreate" classname="com.epf.dao.ZombieDAOTest" time="0.007">
    <system-out><![CDATA[22:57:16.895 [main] DEBUG org.springframework.jdbc.datasource.SingleConnectionDataSource -- Creating new JDBC DriverManager Connection to [jdbc:h2:mem:testdb_testCreate();DB_CLOSE_DELAY=-1]
22:57:16.895 [main] DEBUG org.springframework.jdbc.datasource.SingleConnectionDataSource -- Established shared JDBC Connection: conn15: url=jdbc:h2:mem:testdb_testCreate() user=SA
22:57:16.895 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [init.sql]
22:57:16.896 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT NOT NULL, colonne INT NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )
22:57:16.896 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Plante ( id_plante INT AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(255) NOT NULL, point_de_vie INT NOT NULL, attaque_par_seconde DECIMAL(5, 2) DEFAULT 0.00, degat_attaque INT NOT NULL, cout INT NOT NULL, soleil_par_seconde DECIMAL(5, 2) DEFAULT 0.00, effet ENUM('normal', 'slow low', 'slow medium', 'slow stop') DEFAULT 'normal', chemin_image VARCHAR(255) DEFAULT NULL )
22:57:16.898 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Zombie ( id_zombie INT AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(255) NOT NULL, point_de_vie INT NOT NULL, attaque_par_seconde DECIMAL(5, 2) DEFAULT 0.00, degat_attaque INT NOT NULL, vitesse_de_deplacement DECIMAL(5, 2) DEFAULT 0.00, chemin_image VARCHAR(255) DEFAULT NULL, id_map INT, CONSTRAINT fk_zombie_map FOREIGN KEY (id_map) REFERENCES Map(id_map) )
22:57:16.898 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executed SQL script from class path resource [init.sql] in 3 ms.
22:57:16.898 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [values.sql]
22:57:16.899 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 3 returned as update count for SQL: INSERT INTO Map (ligne, colonne, chemin_image) VALUES (5, 9, 'images/map/gazon.png'), (6, 9, 'images/map/gazon.png'), (4, 8, 'images/map/gazon.png')
22:57:16.899 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 5 returned as update count for SQL: INSERT INTO Plante (nom, point_de_vie, attaque_par_seconde, degat_attaque, cout, soleil_par_seconde, effet, chemin_image) VALUES ('Tournesol', 100, 0.00, 0, 50, 25.00, 'normal', 'images/plante/tournesol.png'), ('Pois Tireur', 150, 1.50, 20, 100, 0.00, 'normal', 'images/plante/poistireur.png'), ('Double Pisto P', 150, 1.50, 40, 200, 0.00, 'normal', 'images/plante/doublepois.png'), ('Glace Pois', 120, 1.00, 10, 175, 0.00, 'slow low', 'images/plante/glacepois.png'), ('Noix', 300, 0.00, 0, 50, 0.00, 'normal', 'images/plante/noix.png')
22:57:16.899 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 5 returned as update count for SQL: INSERT INTO Zombie (nom, point_de_vie, attaque_par_seconde, degat_attaque, vitesse_de_deplacement, chemin_image, id_map) VALUES ('Zombie de base', 100, 0.80, 10, 0.50, 'images/zombie/zombie.png', 1), ('Zombie Cone', 200, 0.80, 10, 0.45, 'images/zombie/conehead.png', 1), ('Zombie Seau', 300, 0.70, 10, 0.40, 'images/zombie/buckethead.png', 1), ('Runner Zombie', 80, 1.00, 8, 0.70, 'images/zombie/runner.png', 2), ('Football Zombie', 250, 0.90, 12, 0.60, 'images/zombie/football.png', 3)
22:57:16.899 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executed SQL script from class path resource [values.sql] in 1 ms.
22:57:16.900 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL query
22:57:16.900 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL statement [SELECT * FROM map WHERE id_map = ?]
22:57:16.900 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
22:57:16.900 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL update
22:57:16.900 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL statement [INSERT INTO zombie
(nom, point_de_vie, attaque_par_seconde, degat_attaque, vitesse_de_deplacement, chemin_image, id_map)
VALUES (?, ?, ?, ?, ?, ?, ?)
]
22:57:16.900 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
22:57:16.900 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing SQL query [SELECT * FROM zombie]
22:57:16.900 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
]]></system-out>
  </testcase>
  <testcase name="testUpdate" classname="com.epf.dao.ZombieDAOTest" time="0.007">
    <system-out><![CDATA[22:57:16.902 [main] DEBUG org.springframework.jdbc.datasource.SingleConnectionDataSource -- Creating new JDBC DriverManager Connection to [jdbc:h2:mem:testdb_testUpdate();DB_CLOSE_DELAY=-1]
22:57:16.903 [main] DEBUG org.springframework.jdbc.datasource.SingleConnectionDataSource -- Established shared JDBC Connection: conn16: url=jdbc:h2:mem:testdb_testUpdate() user=SA
22:57:16.903 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [init.sql]
22:57:16.904 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT NOT NULL, colonne INT NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )
22:57:16.904 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Plante ( id_plante INT AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(255) NOT NULL, point_de_vie INT NOT NULL, attaque_par_seconde DECIMAL(5, 2) DEFAULT 0.00, degat_attaque INT NOT NULL, cout INT NOT NULL, soleil_par_seconde DECIMAL(5, 2) DEFAULT 0.00, effet ENUM('normal', 'slow low', 'slow medium', 'slow stop') DEFAULT 'normal', chemin_image VARCHAR(255) DEFAULT NULL )
22:57:16.905 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Zombie ( id_zombie INT AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(255) NOT NULL, point_de_vie INT NOT NULL, attaque_par_seconde DECIMAL(5, 2) DEFAULT 0.00, degat_attaque INT NOT NULL, vitesse_de_deplacement DECIMAL(5, 2) DEFAULT 0.00, chemin_image VARCHAR(255) DEFAULT NULL, id_map INT, CONSTRAINT fk_zombie_map FOREIGN KEY (id_map) REFERENCES Map(id_map) )
22:57:16.905 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executed SQL script from class path resource [init.sql] in 2 ms.
22:57:16.905 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [values.sql]
22:57:16.906 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 3 returned as update count for SQL: INSERT INTO Map (ligne, colonne, chemin_image) VALUES (5, 9, 'images/map/gazon.png'), (6, 9, 'images/map/gazon.png'), (4, 8, 'images/map/gazon.png')
22:57:16.906 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 5 returned as update count for SQL: INSERT INTO Plante (nom, point_de_vie, attaque_par_seconde, degat_attaque, cout, soleil_par_seconde, effet, chemin_image) VALUES ('Tournesol', 100, 0.00, 0, 50, 25.00, 'normal', 'images/plante/tournesol.png'), ('Pois Tireur', 150, 1.50, 20, 100, 0.00, 'normal', 'images/plante/poistireur.png'), ('Double Pisto P', 150, 1.50, 40, 200, 0.00, 'normal', 'images/plante/doublepois.png'), ('Glace Pois', 120, 1.00, 10, 175, 0.00, 'slow low', 'images/plante/glacepois.png'), ('Noix', 300, 0.00, 0, 50, 0.00, 'normal', 'images/plante/noix.png')
22:57:16.907 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 5 returned as update count for SQL: INSERT INTO Zombie (nom, point_de_vie, attaque_par_seconde, degat_attaque, vitesse_de_deplacement, chemin_image, id_map) VALUES ('Zombie de base', 100, 0.80, 10, 0.50, 'images/zombie/zombie.png', 1), ('Zombie Cone', 200, 0.80, 10, 0.45, 'images/zombie/conehead.png', 1), ('Zombie Seau', 300, 0.70, 10, 0.40, 'images/zombie/buckethead.png', 1), ('Runner Zombie', 80, 1.00, 8, 0.70, 'images/zombie/runner.png', 2), ('Football Zombie', 250, 0.90, 12, 0.60, 'images/zombie/football.png', 3)
22:57:16.907 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executed SQL script from class path resource [values.sql] in 2 ms.
22:57:16.907 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL query
22:57:16.907 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL statement [SELECT * FROM zombie WHERE id_zombie = ?]
22:57:16.907 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
22:57:16.907 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL query
22:57:16.908 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL statement [SELECT * FROM map WHERE id_map = ?]
22:57:16.908 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
22:57:16.908 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL update
22:57:16.908 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL statement [UPDATE zombie SET
nom = ?,
point_de_vie = ?,
attaque_par_seconde = ?,
degat_attaque = ?,
vitesse_de_deplacement = ?,
chemin_image = ?,
id_map = ?
WHERE id_zombie = ?
]
22:57:16.908 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
22:57:16.908 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL query
22:57:16.908 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL statement [SELECT * FROM zombie WHERE id_zombie = ?]
22:57:16.908 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
]]></system-out>
  </testcase>
  <testcase name="testDeleteByMapId" classname="com.epf.dao.ZombieDAOTest" time="0.008">
    <system-out><![CDATA[22:57:16.910 [main] DEBUG org.springframework.jdbc.datasource.SingleConnectionDataSource -- Creating new JDBC DriverManager Connection to [jdbc:h2:mem:testdb_testDeleteByMapId();DB_CLOSE_DELAY=-1]
22:57:16.912 [main] DEBUG org.springframework.jdbc.datasource.SingleConnectionDataSource -- Established shared JDBC Connection: conn17: url=jdbc:h2:mem:testdb_testDeleteByMapId() user=SA
22:57:16.912 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [init.sql]
22:57:16.913 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT NOT NULL, colonne INT NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )
22:57:16.913 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Plante ( id_plante INT AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(255) NOT NULL, point_de_vie INT NOT NULL, attaque_par_seconde DECIMAL(5, 2) DEFAULT 0.00, degat_attaque INT NOT NULL, cout INT NOT NULL, soleil_par_seconde DECIMAL(5, 2) DEFAULT 0.00, effet ENUM('normal', 'slow low', 'slow medium', 'slow stop') DEFAULT 'normal', chemin_image VARCHAR(255) DEFAULT NULL )
22:57:16.914 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE TABLE Zombie ( id_zombie INT AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(255) NOT NULL, point_de_vie INT NOT NULL, attaque_par_seconde DECIMAL(5, 2) DEFAULT 0.00, degat_attaque INT NOT NULL, vitesse_de_deplacement DECIMAL(5, 2) DEFAULT 0.00, chemin_image VARCHAR(255) DEFAULT NULL, id_map INT, CONSTRAINT fk_zombie_map FOREIGN KEY (id_map) REFERENCES Map(id_map) )
22:57:16.914 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executed SQL script from class path resource [init.sql] in 2 ms.
22:57:16.914 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [values.sql]
22:57:16.915 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 3 returned as update count for SQL: INSERT INTO Map (ligne, colonne, chemin_image) VALUES (5, 9, 'images/map/gazon.png'), (6, 9, 'images/map/gazon.png'), (4, 8, 'images/map/gazon.png')
22:57:16.916 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 5 returned as update count for SQL: INSERT INTO Plante (nom, point_de_vie, attaque_par_seconde, degat_attaque, cout, soleil_par_seconde, effet, chemin_image) VALUES ('Tournesol', 100, 0.00, 0, 50, 25.00, 'normal', 'images/plante/tournesol.png'), ('Pois Tireur', 150, 1.50, 20, 100, 0.00, 'normal', 'images/plante/poistireur.png'), ('Double Pisto P', 150, 1.50, 40, 200, 0.00, 'normal', 'images/plante/doublepois.png'), ('Glace Pois', 120, 1.00, 10, 175, 0.00, 'slow low', 'images/plante/glacepois.png'), ('Noix', 300, 0.00, 0, 50, 0.00, 'normal', 'images/plante/noix.png')
22:57:16.916 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 5 returned as update count for SQL: INSERT INTO Zombie (nom, point_de_vie, attaque_par_seconde, degat_attaque, vitesse_de_deplacement, chemin_image, id_map) VALUES ('Zombie de base', 100, 0.80, 10, 0.50, 'images/zombie/zombie.png', 1), ('Zombie Cone', 200, 0.80, 10, 0.45, 'images/zombie/conehead.png', 1), ('Zombie Seau', 300, 0.70, 10, 0.40, 'images/zombie/buckethead.png', 1), ('Runner Zombie', 80, 1.00, 8, 0.70, 'images/zombie/runner.png', 2), ('Football Zombie', 250, 0.90, 12, 0.60, 'images/zombie/football.png', 3)
22:57:16.916 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executed SQL script from class path resource [values.sql] in 2 ms.
22:57:16.916 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL update
22:57:16.916 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL statement [DELETE FROM zombie WHERE id_map = ?]
22:57:16.916 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
22:57:16.917 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL query
22:57:16.917 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate -- Executing prepared SQL statement [SELECT * FROM zombie WHERE id_map = ?]
22:57:16.917 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
]]></system-out>
  </testcase>
</testsuite>